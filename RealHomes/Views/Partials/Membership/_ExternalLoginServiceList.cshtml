@model RealHomes.Models.ExternalLoginServiceListModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();

    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. 
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "MembershipCMS", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()

            <fieldset>
                <legend style="text-align:center">Log in with your social account</legend>

                @if (TempData["LinkLoginError"] != null)
                {
                    <div data-alert class="alert-box alert radius">
                        <ul>
                            @foreach (var err in (string[])TempData["LinkLoginError"])
                            {
                                <li>@err</li>
                            }
                        </ul>
                    </div>
                }

                <ul class="login-icons">
                    @foreach (AuthenticationDescription p in loginProviders)
                    {  //btn-default
                        <li>
                            <button type="submit" class="btn hvr-sweep-to-right" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account" style="width:300px">
                                <i class="@p.Caption"></i>
                                <span>@p.Caption</span>
                            </button>
                        </li>
                    }
                </ul>
            </fieldset>

            }
        }
    }