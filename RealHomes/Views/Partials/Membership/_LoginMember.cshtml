@inherits Umbraco.Web.Mvc.UmbracoViewPage<RealHomes.Models.MembershipLoginCMSModel>
@using Umbraco.Web
@using Umbraco.Web.Models
@using Umbraco.Web.Controllers
@using RealHomes;
@using RealHomes.Models;
@{
    //If sombody already logged in and this page was requested directly.
    if (!Members.IsLoggedIn())
    {

    <!--contact-->
     <div class="login-right">
        <div class="container">
                <h3>Login</h3>
                <div class="login-top">
                    <section id="socialLoginForm">
                        @Html.Partial("Membership/_ExternalLoginServiceList", new ExternalLoginServiceListModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                    <div class="form-info">
                        @{ var backURL = "";
                            if (Request.QueryString["returnURL"] != null)
                            {
                                backURL = Request.QueryString["returnURL"].ToString();
                            }

                        }
                        @{using (Html.BeginUmbracoForm<RealHomes.Controllers.MembershipCMSController>("Login", new { returnURL = backURL }, new { @id = "LoginForm", @class = "form-vertical", role = "form" }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-group">
                                    <label class="control-label col-md-2" style="text-align:left; width:300px">User Name </label>
                                    @Html.TextBoxFor(m => Model.UserName, new { id = "txtUserName", htmlAttributes = new { style = "width:300px", @class = "form-control" } })
                            
                                </div>      
                                <div class="form-group">
                                    <label class="control-label col-md-2" style="text-align:left; width:300px">Password </label>
                                    @Html.PasswordFor(m => Model.Password, new { id = "txtPassword", @class = "form-control" })
                                       
                                </div>
                                string sStyle = "";
                                if (TempData.ContainsKey("LoginResult"))
                                {

                                    if (TempData["LoginResult"].ToString().ToLower() == StringConstants.LOGIN_FAILURE_MSG.ToLower())
                                    {
                                        sStyle = "display:block";

                                    }

                                }
                                else
                                {
                                    sStyle = "display:none";
                                }
                                <div id="errorDiv" style="@sStyle" class="form-group">
                                    <label id="lblError" class="text-danger">@StringConstants.LOGIN_FAILURE_MSG </label>
                                </div>

                                <div class="form-group" >
                                    <label class="hvr-sweep-to-right col-lg-6" >
                                        <input type="submit"  value="Login" />
                                    </label>
                                </div>

                            }

                        }

                    </div>
                    <div class="clearfix"> </div>
                    <hr />
                     <div class="create">
                        
                        <h4 > New To Real Home?</h4>
                        <a  class="hvr-sweep-to-right col-lg-8" href="~/register" style="text-align:center">Create an Account</a>
                         
                       
                    </div>
                    <div class="clearfix"> </div>
                </div>
            </div>
        </div>

                            }
                            else
                            {
                                <div class="row">
                                    <div class="small-12 columns">
                                        @*Html.Partial("~/Views/UmbracoIdentityAccount/LoginStatus.cshtml", Model)*@
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="small-12 columns">
                                        @*Html.Partial("~/Views/UmbracoIdentityAccount/Profile.cshtml", Model)*@
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="small-12 columns">
                                        @*{Html.RenderAction("RenderLogout", "MembershipCMS");
                                        }

                                        @*Response.Redirect("~/Logout");*@
                                    </div>
                                </div>
                            }
}
                            }
                           

<!--//contact
<script>
    window.fbAsyncInit = function () {
        FB.init({
            appId: 'MY_APP_ID',
            xfbml: true,
            version: 'v2.5'
        });
        // Additional initialization code here
        FB.Event.subscribe('auth.authResponseChange', function (response) {
            if (response.status === 'connected') {
                // the user is logged in and has authenticated your
                // app, and response.authResponse supplies
                // the user's ID, a valid access token, a signed
                // request, and the time the access token
                // and signed request each expire
                var uid = response.authResponse.userID;
                var userAccessToken = response.authResponse.accessToken;


                $.post("/umbraco/Surface/BookingAgentSurface/FacebookLogin", { accessToken: userAccessToken });

            } else if (response.status === 'not_authorized') {
                // the user is logged in to Facebook,
                // but has not authenticated your app
            } else {
                // the user isn't logged in to Facebook.
            }
        });
    };


    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>
    -->