@using Umbraco.Core.Models
@using Umbraco.Web.Models
@using RealHomes;
@inherits UmbracoViewPage

<!-- Include Twitter Bootstrap and jQuery: -->
<script type="text/javascript" src="~/Scripts/jquery.min.js"></script>
<link rel="stylesheet" href="~/css/bootstrap.min.css" type="text/css" />
<script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="~/Scripts/header-redesign-inputvalidator0099.js"></script>

<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<link rel="stylesheet" href="~/css/bootstrap.min.css" type="text/css" />
<script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>

<!-- Include the plugin's CSS and JS: -->
<link rel="stylesheet" href="~/css/bootstrap-multiselect.css" type="text/css" />
<script type="text/javascript" src="~/Scripts/bootstrap-multiselect.js"></script>

<script src="~/Scripts/AdvSearchElements.js"></script>


<div class="navigation">
    <div class="container-fluid">
        <nav class="pull">
            <ul>

                @{
                    IEnumerable<RelatedLink> topMenuLinks = Umbraco.AssignedContentItem.GetPropertyValue<IEnumerable<RelatedLink>>("topMenuLinks", true);

                    if (topMenuLinks != null && topMenuLinks.Count() > 0)
                    {
                        foreach (RelatedLink mLink in topMenuLinks)
                        {
                      <li><a href="@mLink.Link">@mLink.Caption</a></li>
                        }
                    }
                    }

            </ul>
        </nav>
    </div>
</div>


<!--header div-->
<div class="header">
    <div class="container">
        <!--logo   style="position:fixed;"-->
        <div class="logo">
            <h1><a href="~/">@Umbraco.Field("mainHeading", recursive: true)</a></h1>
        </div>
        <!--//logo-->
        <div class="top-nav">
            <ul class="right-icons">
                <li><span><i class="glyphicon glyphicon-phone"> </i>@Umbraco.Field("contactNumber", recursive: true)</span></li>

                    @{
                        if (Members.IsLoggedIn())
                        {
                            <span> @Session[StringConstants.CURRENT_USER_NAME]  </span>
                            <span><i class="glyphicon glyphicon-phone"> </i><a href="~/logout"> Logout</a></span>
                        }
                        else
                        {
                            <span><i class="glyphicon glyphicon-log-in"> </i><a href="~/login"> Login</a></span>
                        }
                        /*
                        IEnumerable<RelatedLink> searchLinks = Umbraco.AssignedContentItem.GetPropertyValue<IEnumerable<RelatedLink>>("searchLink", true);
                        if (searchLinks != null && searchLinks.Count() > 0)
                        {
                            foreach (RelatedLink sLink in searchLinks)
                            {
                                //var sLink = searchLinks.FirstOrDefault();
                                var sIcon = @sLink.Caption.ToLower() + "Icon";
                                //<i class="@Umbraco.AssignedContentItem.GetPropertyValue(@sIcon)"> </i>
                                <li><a href=@sLink.Link><i class="@Umbraco.AssignedContentItem.GetPropertyValue(@sIcon)"> </i>@sLink.Caption </a></li>
                                }
                            }
                        */
                    }
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown">UAE<span class="caret"></span></a>

                    <ul class="dropdown-menu">
                        @{
                            IEnumerable<RelatedLink> regionLinks = Umbraco.AssignedContentItem.GetPropertyValue<IEnumerable<RelatedLink>>("regionMenuLinks",true);

                            if (regionLinks != null && regionLinks.Count() > 0)
                            {
                                foreach (RelatedLink mLink in regionLinks)
                                {
                                <li><a href="@mLink.Link">@mLink.Caption</a></li>
                                    }
                                }
                            }

                    </ul>

                </li>

            </ul>


            <div class="nav-icon">
                <div class="hero fa-navicon fa-2x nav_slide_button" id="hero">
                    <a href="#"><i class="glyphicon glyphicon-menu-hamburger"></i> </a>
                </div>
                <!---
                    <a href="#" class="right_bt" id="activator"><i class="glyphicon glyphicon-menu-hamburger"></i>  </a>
                --->
            </div>
            <div class="clearfix"> </div>



        </div>
        <div class="clearfix"> </div>


    </div>

 </div>
<!--header div-->

<!--Body div-->
<div class="body-content">
    <div id="searchWidget">
        <input type="hidden" id="txtSearchPage" />
        <input type="hidden" id="txtSearchCriteria" />
        @{
            
            //By default show property search
            Html.RenderAction("GetAllValues", "AdvSearch");

            /*if (Request.QueryString["SearchPage"].ToString() == "property")
            {
                //Check criteria in request string to send to property search page
                Html.RenderAction("GetAllValues", "AdvSearch");
            }
            else if (Request.QueryString["SearchPage"].ToString() == "agent")
            {
                //Check criteria in request string to send to Agent search page
                //Html.RenderAction("GetAllValues", "AgentSearch");
            }
            else if (Request.QueryString["SearchPage"].ToString() == "mapsearch")
            {
                //Check criteria in request string to send to Map search page
                //Html.RenderAction("GetAllValues", "MapSearch");
            }*/
        }

    </div>

</div>
<!--Body div-->

